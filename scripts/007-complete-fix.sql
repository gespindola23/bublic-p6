-- Complete fix for the newsfeed - handles all foreign key constraints properly
-- This script will work regardless of existing data or constraints

-- First, let's drop all dependent tables in the correct order
DROP TABLE IF EXISTS public.company_followers CASCADE;
DROP TABLE IF EXISTS public.company_employees CASCADE;
DROP TABLE IF EXISTS public.posts CASCADE;
DROP TABLE IF EXISTS public.profiles CASCADE;
DROP TABLE IF EXISTS public.companies CASCADE;

-- Recreate profiles table without auth.users dependency
CREATE TABLE public.profiles (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  full_name text NOT NULL,
  avatar_url text,
  title text,
  company text,
  verified boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Recreate companies table
CREATE TABLE public.companies (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  name text NOT NULL,
  description text,
  logo_url text,
  website text,
  industry text,
  founded_year integer,
  employee_count text,
  funding_stage text,
  total_funding text,
  location text,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Recreate posts table
CREATE TABLE public.posts (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  content text NOT NULL,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
  is_premium boolean DEFAULT false,
  price numeric(10, 2),
  metrics jsonb,
  attachment jsonb,
  job_posting jsonb,
  company_id uuid REFERENCES public.companies(id) ON DELETE SET NULL
);

-- Recreate company_employees table
CREATE TABLE public.company_employees (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  company_id uuid NOT NULL REFERENCES public.companies(id) ON DELETE CASCADE,
  user_id uuid NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  role text,
  joined_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
  UNIQUE(company_id, user_id)
);

-- Recreate company_followers table
CREATE TABLE public.company_followers (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  company_id uuid NOT NULL REFERENCES public.companies(id) ON DELETE CASCADE,
  user_id uuid NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  followed_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
  UNIQUE(company_id, user_id)
);

-- Enable RLS on all tables
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.companies ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.posts ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.company_employees ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.company_followers ENABLE ROW LEVEL SECURITY;

-- Create policies for public read access
CREATE POLICY "Public profiles are viewable by everyone."
  ON public.profiles FOR SELECT
  USING (true);

CREATE POLICY "Public companies are viewable by everyone."
  ON public.companies FOR SELECT
  USING (true);

CREATE POLICY "Public posts are viewable by everyone."
  ON public.posts FOR SELECT
  USING (true);

CREATE POLICY "Public company employees are viewable by everyone."
  ON public.company_employees FOR SELECT
  USING (true);

CREATE POLICY "Public company followers are viewable by everyone."
  ON public.company_followers FOR SELECT
  USING (true);

-- Insert sample companies first
INSERT INTO public.companies (name, description, logo_url, website, industry, founded_year, employee_count, funding_stage, total_funding, location) VALUES
  ('TechFlow', 'AI-powered workflow automation for modern teams', '/placeholder-logo.svg', 'https://techflow.com', 'SaaS', 2022, '15-25', 'Series A', '$5M', 'San Francisco, CA'),
  ('GrowthLabs', 'Data-driven growth solutions for startups', '/placeholder-logo.svg', 'https://growthlabs.io', 'Analytics', 2021, '10-15', 'Seed', '$2M', 'New York, NY'),
  ('EcoTech', 'Sustainable technology for a better tomorrow', '/placeholder-logo.svg', 'https://ecotech.green', 'CleanTech', 2020, '25-50', 'Series B', '$12M', 'Austin, TX'),
  ('DeployFast', 'Lightning-fast deployment platform for developers', '/placeholder-logo.svg', 'https://deployfast.dev', 'DevTools', 2023, '5-10', 'Pre-Seed', '$500K', 'Remote'),
  ('Venture Studio', 'Building the next generation of startups', '/placeholder-logo.svg', 'https://venturestudio.com', 'Venture Capital', 2019, '50-100', 'Established', '$50M', 'Palo Alto, CA');

-- Insert sample profiles
INSERT INTO public.profiles (full_name, avatar_url, title, company, verified) VALUES
  ('Sarah Chen', '/placeholder-user.jpg', 'Founder & CEO', 'TechFlow', true),
  ('Marcus Rodriguez', '/placeholder-user.jpg', 'Co-founder', 'GrowthLabs', true),
  ('Emma Thompson', '/placeholder-user.jpg', 'Head of Engineering', 'EcoTech', false),
  ('Alex Kim', '/placeholder-user.jpg', 'Founder', 'DeployFast', true),
  ('Jordan Lee', '/placeholder-user.jpg', 'Serial Entrepreneur', 'Venture Studio', true),
  ('Priya Patel', '/placeholder-user.jpg', 'VP of Product', 'TechFlow', false),
  ('David Wilson', '/placeholder-user.jpg', 'CTO', 'GrowthLabs', false),
  ('Lisa Zhang', '/placeholder-user.jpg', 'Marketing Director', 'EcoTech', false);

-- Insert sample posts with realistic content
INSERT INTO public.posts (user_id, content, is_premium, price, metrics, attachment, job_posting, company_id, created_at)
SELECT 
  p.id,
  CASE 
    WHEN p.full_name = 'Sarah Chen' THEN 'ðŸš€ Milestone Alert! We just hit $50K MRR after 8 months of building in public. Here''s what we learned about product-led growth and why we''re doubling down on our community strategy. The key was focusing on user onboarding and reducing time-to-value. #BuildInPublic #SaaS'
    WHEN p.full_name = 'Marcus Rodriguez' THEN 'The hardest part about fundraising isn''t the pitch deck - it''s maintaining team morale during the process. Here''s how we kept our team motivated during our Series A journey. Would love to share our learnings with fellow founders. ðŸ§µ #Fundraising'
    WHEN p.full_name = 'Emma Thompson' THEN 'ðŸŒ± We''re hiring! Looking for a Senior Full-Stack Developer to join our mission of making sustainability accessible to everyone. Remote-first company, competitive equity package, and the chance to make a real environmental impact. DM me for details! #Hiring #CleanTech'
    WHEN p.full_name = 'Alex Kim' THEN 'Just closed our seed round! ðŸŽ‰ $2M to revolutionize how developers deploy applications. Huge thanks to @TechStars and our angel investors who believed in our vision. Now the real work begins... Time to scale! #Funding #DevTools'
    WHEN p.full_name = 'Jordan Lee' THEN 'Hot take: Most startups fail not because of product-market fit, but because of founder-market fit. You need to be obsessed with the problem you''re solving, not just the solution. What do you think? Have you experienced this? ðŸ¤” #StartupLife'
    WHEN p.full_name = 'Priya Patel' THEN 'Product-led growth isn''t just about the product - it''s about the entire user experience. Here are 5 PLG strategies that helped us grow from 0 to 10K users in 6 months without spending a dollar on ads. Thread below ðŸ‘‡'
    WHEN p.full_name = 'David Wilson' THEN 'Engineering culture is everything. We just implemented a new code review process that reduced our deployment time by 60% while improving code quality. Happy to share our approach with other engineering teams! #Engineering #DevOps'
    WHEN p.full_name = 'Lisa Zhang' THEN 'Content marketing for B2B SaaS: We grew our organic traffic by 400% in 8 months. Here''s the exact content strategy we used, including our content calendar template and distribution tactics. #ContentMarketing #B2BSaaS'
  END,
  CASE 
    WHEN p.full_name = 'Marcus Rodriguez' THEN true
    WHEN p.full_name = 'Lisa Zhang' THEN true
    ELSE false
  END,
  CASE 
    WHEN p.full_name = 'Marcus Rodriguez' THEN 9.99
    WHEN p.full_name = 'Lisa Zhang' THEN 4.99
    ELSE null
  END,
  CASE 
    WHEN p.full_name = 'Sarah Chen' THEN '{"mrr": "$50,000", "growth": "+25%", "users": "2,500"}'::jsonb
    WHEN p.full_name = 'Alex Kim' THEN '{"funding": "$2M", "stage": "Seed", "investors": "8"}'::jsonb
    WHEN p.full_name = 'Priya Patel' THEN '{"users": "10,000", "growth": "0-10K in 6mo", "cac": "$0"}'::jsonb
    WHEN p.full_name = 'David Wilson' THEN '{"deployment_time": "-60%", "code_quality": "+40%"}'::jsonb
    WHEN p.full_name = 'Lisa Zhang' THEN '{"organic_traffic": "+400%", "timeline": "8 months"}'::jsonb
    ELSE null
  END,
  CASE 
    WHEN p.full_name = 'Marcus Rodriguez' THEN '{"type": "pdf", "title": "Series A Fundraising Playbook", "description": "Complete guide with templates, investor list, and pitch deck examples", "gated": true}'::jsonb
    WHEN p.full_name = 'Lisa Zhang' THEN '{"type": "template", "title": "B2B Content Marketing Kit", "description": "Content calendar, distribution checklist, and performance tracking sheet", "gated": true}'::jsonb
    ELSE null
  END,
  CASE 
    WHEN p.full_name = 'Emma Thompson' THEN '{"title": "Senior Full-Stack Developer", "location": "Remote", "type": "Full-time", "salary": "$120K-160K", "equity": "0.1-0.5%"}'::jsonb
    ELSE null
  END,
  (SELECT id FROM public.companies WHERE name = p.company LIMIT 1),
  CASE 
    WHEN p.full_name = 'Sarah Chen' THEN NOW() - INTERVAL '1 hour'
    WHEN p.full_name = 'Marcus Rodriguez' THEN NOW() - INTERVAL '3 hours'
    WHEN p.full_name = 'Emma Thompson' THEN NOW() - INTERVAL '5 hours'
    WHEN p.full_name = 'Alex Kim' THEN NOW() - INTERVAL '7 hours'
    WHEN p.full_name = 'Jordan Lee' THEN NOW() - INTERVAL '9 hours'
    WHEN p.full_name = 'Priya Patel' THEN NOW() - INTERVAL '12 hours'
    WHEN p.full_name = 'David Wilson' THEN NOW() - INTERVAL '1 day'
    WHEN p.full_name = 'Lisa Zhang' THEN NOW() - INTERVAL '2 days'
  END
FROM public.profiles p;

-- Link employees to companies
INSERT INTO public.company_employees (company_id, user_id, role)
SELECT 
  c.id,
  p.id,
  CASE 
    WHEN p.full_name = 'Sarah Chen' THEN 'Founder & CEO'
    WHEN p.full_name = 'Priya Patel' THEN 'VP of Product'
    WHEN p.full_name = 'Marcus Rodriguez' THEN 'Co-founder'
    WHEN p.full_name = 'David Wilson' THEN 'CTO'
    WHEN p.full_name = 'Emma Thompson' THEN 'Head of Engineering'
    WHEN p.full_name = 'Lisa Zhang' THEN 'Marketing Director'
    WHEN p.full_name = 'Alex Kim' THEN 'Founder'
    WHEN p.full_name = 'Jordan Lee' THEN 'Managing Partner'
  END
FROM public.profiles p
JOIN public.companies c ON c.name = p.company;

-- Add some followers
INSERT INTO public.company_followers (company_id, user_id)
SELECT 
  c.id,
  p.id
FROM public.companies c
CROSS JOIN public.profiles p
WHERE p.company != c.name
AND random() > 0.7; -- Random selection of followers

-- Verify the data was inserted correctly
SELECT 
  'Database setup complete!' as status,
  (SELECT COUNT(*) FROM public.profiles) as profiles_count,
  (SELECT COUNT(*) FROM public.companies) as companies_count,
  (SELECT COUNT(*) FROM public.posts) as posts_count,
  (SELECT COUNT(*) FROM public.company_employees) as employees_count,
  (SELECT COUNT(*) FROM public.company_followers) as followers_count;

-- Show a sample of the posts that were created
SELECT 
  p.full_name as author,
  p.company,
  LEFT(posts.content, 100) || '...' as post_preview,
  posts.created_at
FROM public.profiles p
JOIN public.posts posts ON p.id = posts.user_id
ORDER BY posts.created_at DESC
LIMIT 5;
